%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.6
%%CreationDate: Wed Jan 27 14:44:30 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUAUCAGCAAUGGUAGCAGCUGCUGUUAGGUUCAAAUAUGCUGCAACACCAACACCAUUCUGGGUGUGGAUGGUCAUCAUUUCAUCCUCAGGUGCC\
) def
/coor [
[95.23735809 184.61073303]
[94.75163269 169.61860657]
[94.26589966 154.62646484]
[93.78017426 139.63433838]
[93.29444122 124.64220428]
[82.11006927 119.71165466]
[74.09944153 109.82316589]
[71.38813782 96.87469482]
[75.02215576 83.63159180]
[84.64068604 73.13630676]
[98.46066284 68.01117706]
[84.87175751 61.65967560]
[71.28284454 55.30817413]
[57.69393921 48.95667267]
[37.86291885 51.77208710]
[27.15266418 35.81055832]
[13.18112183 30.35198593]
[-0.79041928 24.89341164]
[-14.76196098 19.43483734]
[-28.73350143 13.97626305]
[-38.12751007 25.81873131]
[-50.59573746 34.36476517]
[-65.02951813 38.85445786]
[-80.14541626 38.88859177]
[-94.59932709 34.46413040]
[-107.10601807 25.97448921]
[-116.55341339 14.17456818]
[-122.10144806 0.11360446]
[-123.25679779 -14.95810986]
[-119.91673279 -29.70040894]
[-112.37824249 -42.80241394]
[-101.31165314 -53.09910965]
[-87.70098877 -59.67491531]
[-72.75650024 -61.94511795]
[-57.80705261 -59.70785141]
[-44.18193054 -53.16205215]
[-33.09267426 -42.88977051]
[-25.52533531 -29.80440521]
[-22.15279007 -15.06950188]
[-23.27492714 0.00472150]
[-9.30338669 5.46329546]
[4.66815472 10.92186928]
[18.63969612 16.38044357]
[32.61123657 21.83901787]
[41.78408813 16.82987022]
[52.41137695 17.82123566]
[60.84325027 24.72150421]
[64.04544067 35.36776733]
[77.63434601 41.71926880]
[91.22325897 48.07077026]
[104.81216431 54.42227173]
[119.48100281 51.28775787]
[129.28721619 39.93706512]
[139.09342957 28.58637238]
[148.89964294 17.23568153]
[158.70585632 5.88498878]
[157.30535889 -9.85712528]
[167.51034546 -21.92500114]
[183.26638794 -23.15898132]
[195.22569275 -12.82696915]
[196.29302979 2.94123840]
[185.83514404 14.79064178]
[170.05653381 15.69120026]
[160.25033569 27.04189301]
[150.44412231 38.39258575]
[140.63790894 49.74327850]
[130.83169556 61.09396744]
[134.90914917 75.52915192]
[149.20471191 80.07189941]
[163.50028992 84.61464691]
[177.79586792 89.15740204]
[192.09144592 93.70014954]
[206.38700867 98.24290466]
[218.80091858 88.93298340]
[234.31668091 88.73148346]
[246.96818542 97.71586609]
[251.89065552 112.43146515]
[247.19129944 127.21983337]
[234.67713928 136.39453125]
[219.16009521 136.42771912]
[206.60681152 127.30661011]
[201.84425354 112.53847504]
[187.54869080 107.99572754]
[173.25311279 103.45297241]
[158.95753479 98.91022491]
[144.66197205 94.36746979]
[130.36639404 89.82472229]
[130.33451843 102.05345917]
[125.80928040 112.73919678]
[117.93703461 120.39452362]
[108.28657532 124.15647125]
[108.77230835 139.14860535]
[109.25803375 154.14074707]
[109.74376678 169.13287354]
[110.22949219 184.12501526]
[113.04277802 203.30143738]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[5 91]
[11 51]
[12 50]
[13 49]
[14 48]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
] def

init

% Start Annotations
1 95 0.0 1 colorpair
2 94 0.0 1 colorpair
3 93 0.0 1 colorpair
4 92 0.0 1 colorpair
5 91 0.0 1 colorpair
11 51 0.0 1 colorpair
12 50 0.0 1 colorpair
13 49 0.0 1 colorpair
14 48 0.16 1 colorpair
16 44 0.0 1 colorpair
17 43 0.0 1 colorpair
18 42 0.0 1 colorpair
19 41 0.0 1 colorpair
20 40 0.0 1 colorpair
52 67 0.0 1 colorpair
53 66 0.0 1 colorpair
54 65 0.0 1 colorpair
55 64 0.0 1 colorpair
56 63 0.0 1 colorpair
68 87 0.0 1 colorpair
69 86 0.0 1 colorpair
70 85 0.0 1 colorpair
71 84 0.0 1 colorpair
72 83 0.0 1 colorpair
73 82 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
48 cmark

% End Annotations
% show it
showpage
end
%%EOF
