%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.6
%%CreationDate: Wed Jan 27 11:47:06 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAUGGUGAAAUGGUUUAUGGGAUUGCAGAUUGGAGAAUGAACAUUUGAACAACGUUGGCAAGUUCAGAGCAGUGAAGACUGUCCCAUUACCAUUCCGUGA\
) def
/coor [
[75.21749115 407.79721069]
[74.75099182 392.80447388]
[74.28449249 377.81173706]
[73.81799316 362.81900024]
[73.35149384 347.82623291]
[70.87455750 345.08401489]
[69.70003510 340.93972778]
[70.50260162 336.06723022]
[73.60653687 331.42901611]
[74.53907776 316.45803833]
[75.47162628 301.48706055]
[76.40416718 286.51605225]
[77.33671570 271.54507446]
[78.26925659 256.57409668]
[70.45479584 247.19581604]
[71.22171783 234.60865784]
[80.70384216 225.69540405]
[82.10153198 210.76066589]
[83.49922180 195.82592773]
[84.89691162 180.89118958]
[86.29460144 165.95645142]
[87.69229126 151.02169800]
[89.08998108 136.08695984]
[74.57756805 127.83877563]
[65.04917145 114.13284302]
[62.37282562 97.65619659]
[67.07321930 81.63904572]
[78.22884369 69.22152710]
[93.65266418 62.83807373]
[94.11915588 47.84532928]
[94.58565521 32.85258484]
[95.05215454 17.85984039]
[84.08575439 11.45011616]
[76.98596954 1.00530815]
[75.08299255 -11.40616417]
[78.68528748 -23.35878372]
[87.03158569 -32.54394150]
[98.45080566 -37.21580505]
[99.84849548 -52.15054703]
[101.24618530 -67.08528900]
[102.64386749 -82.02002716]
[104.04155731 -96.95476532]
[101.52902222 -103.38176727]
[102.61066437 -109.19036102]
[106.01882172 -112.76460266]
[108.34230042 -127.58355713]
[110.66577148 -142.40251160]
[103.67084503 -153.37648010]
[106.02750397 -165.76481628]
[115.91094208 -172.92968750]
[118.69416046 -187.66921997]
[112.76442719 -202.95877075]
[123.25016785 -215.56755066]
[139.36454773 -212.52471924]
[144.53047180 -196.96049500]
[133.43368530 -184.88600159]
[130.65046692 -170.14648438]
[137.38444519 -154.02336121]
[125.48472595 -140.07904053]
[123.16125488 -125.26008606]
[120.83778381 -110.44112396]
[118.97630310 -95.55707550]
[117.57861328 -80.62233734]
[116.18092346 -65.68759918]
[114.78323364 -50.75285721]
[113.38554382 -35.81811905]
[127.11380005 -24.93640327]
[131.73155212 -7.87751818]
[125.25428772 8.73195457]
[110.04489899 18.32633781]
[109.57839966 33.31908035]
[109.11190033 48.31182480]
[108.64540100 63.30456924]
[120.71685028 68.50222778]
[130.27050781 77.52792358]
[136.14526367 89.28472900]
[137.62716675 102.34380341]
[134.53611755 115.11802673]
[127.24774933 126.05490112]
[116.64787292 133.82522583]
[104.02471924 137.48464966]
[102.62702942 152.41938782]
[101.22933960 167.35412598]
[99.83164978 182.28887939]
[98.43395996 197.22361755]
[97.03627014 212.15835571]
[95.63858032 227.09309387]
[103.73757935 243.53855896]
[93.24024200 257.50665283]
[92.30769348 272.47763062]
[91.37515259 287.44860840]
[90.44261169 302.41958618]
[89.51006317 317.39056396]
[88.57752228 332.36157227]
[88.34423828 347.35974121]
[88.81073761 362.35247803]
[89.27723694 377.34524536]
[89.74373627 392.33798218]
[90.21023560 407.33071899]
[92.99892426 426.51074219]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[9 94]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[29 73]
[30 72]
[31 71]
[32 70]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[45 61]
[46 60]
[47 59]
[50 57]
[51 56]
] def

init

% Start Annotations
1 99 0.0 1 colorpair
2 98 0.0 0.6 colorpair
3 97 0.0 1 colorpair
4 96 0.0 0.2 colorpair
5 95 0.0 0.6 colorpair
9 94 0.0 0.6 colorpair
10 93 0.0 1 colorpair
11 92 0.0 1 colorpair
12 91 0.0 1 colorpair
13 90 0.0 1 colorpair
14 89 0.0 1 colorpair
17 87 0.0 0.6 colorpair
18 86 0.0 1 colorpair
19 85 0.0 1 colorpair
20 84 0.0 1 colorpair
21 83 0.0 0.6 colorpair
22 82 0.16 1 colorpair
23 81 0.0 1 colorpair
29 73 0.0 1 colorpair
30 72 0.0 1 colorpair
31 71 0.0 1 colorpair
32 70 0.0 1 colorpair
38 66 0.0 1 colorpair
39 65 0.0 1 colorpair
40 64 0.0 1 colorpair
41 63 0.16 1 colorpair
42 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
47 59 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 98 1 gmark
4 96 2 gmark
5 95 1 gmark
9 94 1 gmark
17 87 1 gmark
21 83 1 gmark
22 cmark
41 cmark

% End Annotations
% show it
showpage
end
%%EOF
